tree.c creerNode 2 calloc
tree.c creerNodeDouble 2 %creerNodeNormalString
tree.c creerNodeInt 2 %creerNode
tree.c creerNodeNormalString 2 %creerNode strcpy
tree.c creerNodeString 2 %creerNode tolower
tree.c getNull 2
tree.c isLeaf 2
tree.c printNode 2 %printNode %printNodeType printf
tree.c printNodeType 2 printf
tree.c printTree 2 %printNode printf
table_symb.c genererTableSymb 2 %parseTreeSymb
table_symb.c parseTreeSymb 2 insert malloc %parseTreeSymb sprintf strlen
rename.c loadReservedWord 2 exit fclose feof fgetc fopen fprintf free insert malloc sprintf strcpy strlen
main.c check 1 exit fopen fprintf
main.c containsChar 2
main.c getDirName 1 malloc strcpy strlen strncpy
main.c getFileName 1 malloc strcpy strlen
main.c getTargetFileName 1 malloc strcat strcpy strlen strncpy
main.c initParam 2 %containsChar fprintf
main.c main 2 calloc %check ctime exit fclose fopen fprintf free genereCode genererTableSymb %getDirName %getFileName %getTargetFileName %initParam loadFunctionsTranlations loadReservedWord malloc %openFile printTree printf %scanArobase sprintf %strToLower strcat strcpy strlen system time %usage yyparse
main.c openFile 2 fclose fopen fputs
main.c parseArobase 2 exit fclose feof fgetc fopen fprintf fputc fputs %parseArobase sprintf
main.c scanArobase 2 exit fclose fopen fprintf %parseArobase sprintf
main.c strToLower 2 tolower
main.c usage 1 exit printf
main.c yyerror 2 free malloc %openFile sprintf
lib.c loadFunctionsTranlations 2 exit fclose feof fgetc fopen fprintf free insert malloc sprintf strcpy strlen
lex.yy.c addComment 2 malloc %removeBeforeComment strlen
lex.yy.c input 1 %input %yy_get_next_buffer %yyrestart %yywrap
lex.yy.c nbOccCharInString 2 strlen
lex.yy.c removeBeforeComment 2 strchr strcpy
lex.yy.c yy_create_buffer 2 %yy_fatal_error %yy_flex_alloc %yy_init_buffer
lex.yy.c yy_delete_buffer 2 %yy_flex_free
lex.yy.c yy_fatal_error 1 exit fprintf
lex.yy.c yy_flex_alloc 1 malloc
lex.yy.c yy_flex_free 1 free
lex.yy.c yy_flex_realloc 1 realloc
lex.yy.c yy_flex_strlen 1
lex.yy.c yy_flex_strncpy 1
lex.yy.c yy_flush_buffer 2 %yy_load_buffer_state
lex.yy.c yy_get_next_buffer 1 _IO_getc ferror fread %yy_fatal_error %yyrestart
lex.yy.c yy_get_previous_state 1
lex.yy.c yy_init_buffer 2 fileno isatty %yy_flush_buffer
lex.yy.c yy_load_buffer_state 2
lex.yy.c yy_scan_buffer 2 %yy_fatal_error %yy_flex_alloc %yy_switch_to_buffer
lex.yy.c yy_scan_bytes 2 %yy_fatal_error %yy_flex_alloc %yy_scan_buffer
lex.yy.c yy_scan_string 2 %yy_scan_bytes
lex.yy.c yy_switch_to_buffer 2 %yy_load_buffer_state
lex.yy.c yy_try_NUL_trans 1
lex.yy.c yylex 2 %addComment atoi fwrite malloc %nbOccCharInString realloc sprintf strcpy strlen %yy_create_buffer %yy_fatal_error %yy_flex_strncpy %yy_get_next_buffer %yy_get_previous_state %yy_load_buffer_state %yy_try_NUL_trans %yyrestart %yywrap
lex.yy.c yyrestart 2 %yy_create_buffer %yy_init_buffer %yy_load_buffer_state
lex.yy.c yyunput 1 %yy_fatal_error
lex.yy.c yywrap 2
idl2matlab.c yyparse 2 creerNode creerNodeDouble creerNodeInt creerNodeNormalString creerNodeString getNull yyerror yylex
hashtable.c delete 2 free %hash strcmp
hashtable.c deleteObjetOfType 2 free
hashtable.c displayTable 2 printf
hashtable.c find 2 %hash strcmp
hashtable.c freeHashTable 2 free
hashtable.c hash 2
hashtable.c insert 2 %hash malloc
essai.c main 2 malloc printf strlen
code.c adaptString 2 strcpy strlen
code.c afficher_dims 2 free malloc %printOut sprintf
code.c afficher_matrix_crochet 2 %parseTree %printOut
code.c calculer_dim 2 %calculer_dim
code.c containsFunctionCall 2 %containsFunctionCall %isMatrix
code.c containsKeywords 2 %containsKeywords
code.c containsVariable 2 %containsVariable
code.c creer_ref_tab_symb 2 insert malloc sprintf strlen
code.c decTab 2
code.c doubleApostrophe 2 free malloc sprintf strcpy strlen
code.c freeNode 2 free %freeNode
code.c genereCode 2 exit fclose fopen fprintf free malloc %parseTree %printOut %printToLog %replaceCharacter %setString sprintf strcpy strlen
code.c genererNamedStruct 2 %genererNamedStruct %parseTree %printOut
code.c genererStruct 2 %genererStruct %parseTree %printOut
code.c generer_ref_struct 2 free %generer_ref_struct %gerer_ident_parent malloc %parseTree %printOut sprintf
code.c generer_suite_param 2 free %generer_ref_struct %generer_suite_param %incTab malloc %parseTree %printOut sprintf
code.c gerer_ident_parent 2 %decTab free %generer_ref_struct %generer_suite_param %incTab malloc %parseTree %printOut %printTab sprintf
code.c gestionCatch 2 %decTab %gestionCatch %incTab %parseTree %printOut %printTab %printToLog sprintf
code.c getLibFileWord 2 malloc strcpy
code.c getMatrixDim 2 %getMatrixDim
code.c incTab 2
code.c inserer_tuer 2 find free insert malloc strcpy strlen
code.c insertComment 2 free malloc %printOut %printTab %removeCharacter strlen
code.c isMatrix 2 find free malloc
code.c isNodeFunctionCall 2 find free malloc
code.c isVariable 2 find free malloc
code.c nbParamPro 2 %nbParamPro
code.c parseForVarSystem 2 find insert malloc %parseForVarSystem %printOut %printTab strcmp strcpy strlen
code.c parseFuncParam1 2 free malloc %parseFuncParam1 %printOut sprintf strlen
code.c parseFuncParam2 2 find free %inserer_tuer malloc %parseFuncParam2 %printOut sprintf strcpy strlen
code.c parseFuncParam3 2 free malloc %parseFuncParam3 %printOut sprintf strlen
code.c parseProCallParam1 2 find free %inserer_tuer malloc %parseProCallParam1 %printOut sprintf strcpy strlen
code.c parseProCallParam2 2 find free %inserer_tuer malloc %parseProCallParam2 %parseTree %printOut sprintf strcat strcpy strlen
code.c parseProCallParam3 2 find free %inserer_tuer malloc %parseProCallParam3 %printOut sprintf
code.c parseProCallParam4 2 %parseProCallParam4
code.c parseTree 2 %adaptString %afficher_matrix_crochet atoi %calculer_dim %containsKeywords %containsVariable %creer_ref_tab_symb %decTab delete deleteObjetOfType %doubleApostrophe exit fclose find fopen fprintf free %genererNamedStruct %genererStruct %generer_ref_struct %gestionCatch %getLibFileWord %getMatrixDim %incTab %inserer_tuer insert %insertComment %isNodeFunctionCall malloc %nbParamPro %parseFuncParam1 %parseFuncParam2 %parseFuncParam3 %parseProCallParam1 %parseProCallParam2 %parseProCallParam3 %parseProCallParam4 %parseTree %printOut %printTab %printToLog %printUndeclaredVariables %printVarSystemCalled %realLineInSource %removeCharacter sprintf strcmp strcpy strlen strncpy %testIfCatch
code.c printOut 2 fputs strcat
code.c printTab 2 %printOut
code.c printToLog 2 fputs
code.c printUndeclaredVariables 2 %parseFuncParam1 %parseFuncParam2 %parseFuncParam3 %parseTree strcpy
code.c printVarSystemCalled 2 deleteObjetOfType %parseForVarSystem %printOut
code.c readLineInFile 2 fclose feof fgetc fopen
code.c realLineInSource 2 %realLineInSource
code.c removeCharacter 2 strcpy tolower
code.c replaceCharacter 2 strcpy tolower
code.c setString 2 strcat strcpy
code.c testIfCatch 2 %parseTree %printOut %printToLog sprintf strcmp
