////////////////////////////////////////////////
//// File generated by IDL2Matlab V2.0.     ////
////////////////////////////////////////////////

function [varargout] = traductionsimple(varargin)

////Initialization of parameters
  I2Mkwn=['I2M_a1', 'I2M_a2', 'I2M_pos'];
  I2Mkwv=['x', 'y', 'I2M_pos'];
  x=[]; y=[]; I2M_pos=[];
  I2M_lst=[];  I2M_out=[];  lv=length(varargin); if (~(modulo(lv,2)==0)), I2M_ok=0;  else,   I2M_ok=1;
  for I2M=1:2:lv, I2M_tmp=varargin(I2M);	if (typeof(I2M_tmp)~='string'); I2M_ok=0;break;	end;I2Mx=strindex(I2M_tmp,I2Mkwn); if length(I2Mx) ~=1;	I2M_ok=0;break;	end; str=string(I2Mkwv(I2Mx));	str=str+'=';str=str+string(varargin(I2M+1)); str=str+';';execstr([str]);	I2M_lst((I2M+1)/2)=I2Mkwv(I2Mx); end;  end;
  if ~I2M_ok; for I2M=1:lv; str=string(I2Mkwv(I2M)); str=str+'='; str=str+string(varargin(I2M)); str=str+';';  execstr([str]);end; end;
  if ~isempty(I2M_pos);	for I2M=1:length(I2M_pos); str=sprintf("varargout(%d)=I2M_lst(I2M_pos(%d));",I2M,I2M); I2M_out= [I2M_out  str];	end; end;

////End of parameters initialization

  if ((x < 0))
    x = -x;
  end//if

  if ((y >= 0))
    y = +y;
  else
    y = -y;
  end//if

  for i = 1:y,
    x = x .* y.^1;
    y = y + x;
  end//for
  z = min(3, x);
  select y,
    case 1,
      // Traduction du repeat en while
      y = y ./ 0.5;
      while (~((y <= 0) | (y == z))),
        y = y ./ 0.5;
      end//while
    case 2,
      while ((x ~= z)),
        x = x - 1;
      end//while
    else
      if (((x > y) & (x > z)))
        x = max((y - 2), z);
      end//if

  end //select
  printt('calcul de sin(x):');
  printt(sin(x));
  printt('calcul de cos(y):');
  printt(cos(y));
  printt('calcul de log(min(3,x)) :');
  printt(log(z));

if ~(isempty(I2M_out)); eval(I2M_out); else varargout(1)=varargin(1); end 
return;
//// end of function traductionsimple
