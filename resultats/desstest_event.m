%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% File generated by IDL2Matlab V2.0.      %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%** **************
%**
function [varargout] = desstest_event(varargin)

%%Initialization of parameters
  I2Mkwn=char('I2M_a1', 'I2M_pos');
  I2Mkwv={'ev', 'I2M_pos'};
  ev=[]; I2M_pos=[];
  I2M_lst={}; I2M_out=''; lv=length(varargin); if rem(lv,2) ~= 0, I2M_ok=0; else, I2M_ok=1;
  for I2M=1:2:lv; I2M_tmp=varargin{I2M}; if ~ischar(I2M_tmp); I2M_ok=0; break; end; I2Mx=strmatch(I2M_tmp,I2Mkwn); if length(I2Mx) ~=1; I2M_ok=0; break; end; eval([I2Mkwv{I2Mx} '=varargin{I2M+1};']); I2M_lst{(I2M+1)/2}=I2Mkwv{I2Mx}; end; end;
  if ~I2M_ok; for I2M=1:lv; eval([I2Mkwv{I2M} '=varargin{I2M};']); end; end;
  if ~isempty(I2M_pos); for I2M=1:length(I2M_pos); I2Ms=num2str(I2M); I2M_out=[I2M_out 'varargout{' I2Ms '}=' I2M_lst{I2M_pos(I2M)} '; ']; end; end;

%%End of parameters initialization

  global i2mvs_d i2mvs_p % SYSTEM VARIABLES

  % Creation of undeclared variables of functions parameters
  uv=1; r=1; g=1; b=1; x=1; y=1; 

  global win1 win2 labl  %% desstest

  [uv] = widget_control('I2M_a1', ev.id, 'get_uvalue', uv, 'I2M_pos', [2]);
  switch uv,
    case 'plot',
      w = findgen(100);
      s = eval('sizz(w)','[0 0 1]');
      plott('I2M_a1', log10(w + 1), 'I2M_a2', sin(w ./ 5), 'title', 'sin(findgen(100)/10)', 'xtitle', 'alog10(findgen(100)+1)', 'thick', 3);
    case 'oploterr',
      w = findgen(100);
      s = eval('sizz(w)','[0 0 1]');
      plott('I2M_a1', sin(w ./ 5), 'title', 'sin(findgen(100)/10)', 'thick', 1);
      oplotterr(sin(w ./ 5),sqrt(max(sin(w ./ 5), 0)));
    case 'surface',
      %errplot,sin(w/5)-0.5,sin(w/5)+0.5
      surfacee('I2M_a1', dist(25), 'horizontal', 1, 'ax', 15, 'shades', bytscl(dist(25)));
    case 'shade_surf',
      w = dist(200);
      s = eval('sizz(w)','[0 0 1]');
      [w] = shade_surf('I2M_a1', w, 'I2M_a2', findgen(s(1 +1)) + 50, 'I2M_a3', findgen(s(2 +1)) + 100, 'ax', 75, 'max_value', maax(w) .* 2 ./ 3, 'shades', bytscl(dist(200)), 'I2M_pos', [1]);
    case 'live_contour',
      w = dist(40);
      s = eval('sizz(w)','[0 0 1]');
      [w] = live_contour('I2M_a1', w, 'I2M_pos', [1]);
    case 'contour',
      w = dist(40);
      s = eval('sizz(w)','[0 0 1]');
      [w] = contourr('I2M_a1', w, 'fill', 1, 'nlevels', 10, 'I2M_pos', [1]);
    case 'erase',
      erase(50);
    case 'tvscl',
      tvscl(dist(80),150,100);
    case 'image_cont',
      image_cont(dist(50));
    case 'replot',
      %if (!D.Name eq 'WIN')then begin w=tvrd(/true) & w=color_Quan(w,1,a,b,c)
      %endif else w=tvrd()
      [r, g, b] = tvlct('I2M_a1', r, 'I2M_a2', g, 'I2M_a3', b, 'get', 1, 'I2M_pos', [1, 2, 3]);
      w = tvrd;
      erase;
      [w] = tv('I2M_a1', w, 'I2M_pos', [1]);
      [r, g, b] = tvlct('I2M_a1', r, 'I2M_a2', g, 'I2M_a3', b, 'I2M_pos', [1, 2, 3]);
    case 'background',
      if (i2mvs_p.background ~= 200)
        %w=bytscl(dist(80)) & erase & tv,w
        i2mvs_p.background = 200;
      else
        i2mvs_p.background = 0;
      end%if

    case 'ticklen',
      if (i2mvs_p.ticklen ~= 1)
        i2mvs_p.ticklen = 1;
      else
        i2mvs_p.ticklen = 0;
      end%if

    case 'linestyle',
      if (i2mvs_p.linestyle == 5)
        i2mvs_p.linestyle = 0;
      else
        i2mvs_p.linestyle = 5;
      end%if

    case 'loadct',
      if ((strcomp(tag_names('I2M_a1', ev, 'structure_name', 1), 'WIDGET_DROPLIST')))
        switch ev.index,
          case 0,
            loadct(0);
          case 1,
            loadct(1);
          case 2,
            loadct(3);
          case 3,
            loadct(5);
          case 4,
            loadct(7);
          case 5,
            loadct(11);
          case 6,
            loadct(13);
          case 7,
            loadct(18);
        end %switch
      end%if

    case 'win1',
      %end
      wset(win1);
      [labl] = widget_control('I2M_a1', labl, 'set_value', 'Current window is 1', 'I2M_pos', [1]);
    case 'win2',
      wset(win2);
      [labl] = widget_control('I2M_a1', labl, 'set_value', 'Current window is 2', 'I2M_pos', [1]);
    case 'winevent1',
      if (i2mvs_d.window == win1)
        [x, y] = cursor('I2M_a1', x, 'I2M_a2', y, 'I2M_a3', 0, 'data', 1, 'I2M_pos', [1, 2]);
        [labl] = widget_control('I2M_a1', labl, 'set_value', 'Data:   X=' + strung(x) + ' Y=' + strung(y), 'I2M_pos', [1]);
        if (ev.type == 0)
          [labl] = widget_control('I2M_a1', labl, 'set_value', 'Button Press', 'I2M_pos', [1]);
        end%if

        if (ev.type == 1)
          [labl] = widget_control('I2M_a1', labl, 'set_value', 'Button Release', 'I2M_pos', [1]);
        end%if

      end%if

    case 'winevent2',
      if (i2mvs_d.window == win2)
        [x, y] = cursor('I2M_a1', x, 'I2M_a2', y, 'I2M_a3', 0, 'device', 1, 'I2M_pos', [1, 2]);
        [labl] = widget_control('I2M_a1', labl, 'set_value', 'Device: X=' + strung(x) + ' Y=' + strung(y), 'I2M_pos', [1]);
        if (ev.type == 0)
          [labl] = widget_control('I2M_a1', labl, 'set_value', 'Button Press', 'I2M_pos', [1]);
        end%if

        if (ev.type == 1)
          [labl] = widget_control('I2M_a1', labl, 'set_value', 'Button Release', 'I2M_pos', [1]);
        end%if

      end%if

  end %switch

eval(I2M_out);
 return;
%% end of function desstest_event
